{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\New folder\\\\Frontend\\\\src\\\\Components\\\\HomeArea\\\\RandomProduct\\\\RandomProduct.tsx\";\nimport { Component } from \"react\";\nimport \"./RandomProduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomProduct extends Component {\n  // Constructor - Object has been created\n  constructor(props) {\n    super(props);\n    this.timerId = 0;\n    this.state = {\n      products: [\"Apple\", \"Banana\", \"Peach\", \"Grapes\", \"Orange\"],\n      randomProduct: \"Apple\"\n    };\n  } // componentDidMount - Object is ready for use:\n\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const index = Math.floor(Math.random() * this.state.products.length);\n      this.setState({\n        randomProduct: this.state.products[index]\n      });\n    }, 1000);\n  } // render - UI needs to be rendered into the DOM:\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RandomProduct Box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.randomProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } // componentDidUpdate - Component state or props has been changed\n\n\n  componentDidUpdate() {} // componentWillUnmount - the component is about to be destroyed!\n\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n}\n\nexport default RandomProduct;","map":{"version":3,"sources":["C:/Users/USER/Desktop/New folder/Frontend/src/Components/HomeArea/RandomProduct/RandomProduct.tsx"],"names":["Component","RandomProduct","constructor","props","timerId","state","products","randomProduct","componentDidMount","window","setInterval","index","Math","floor","random","length","setState","render","componentDidUpdate","componentWillUnmount","clearInterval"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,qBAAP;;;AAOA,MAAMC,aAAN,SAA4BD,SAA5B,CAA8D;AAI1D;AACOE,EAAAA,WAAW,CAACC,KAAD,EAAY;AAC1B,UAAMA,KAAN;AAD0B,SAHtBC,OAGsB,GAHZ,CAGY;AAE1B,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,EAAuC,QAAvC,CADD;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAIH,GAXyD,CAa1D;;;AACOC,EAAAA,iBAAiB,GAAS;AAC7B,SAAKJ,OAAL,GAAeK,MAAM,CAACC,WAAP,CAAmB,MAAM;AACpC,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,MAA/C,CAAd;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBK,KAApB;AAAjB,OAAd;AACH,KAHc,EAGZ,IAHY,CAAf;AAIH,GAnByD,CAqB1D;;;AACOM,EAAAA,MAAM,GAAgB;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAA,+BACI;AAAA,oBAAO,KAAKZ,KAAL,CAAWE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GA9ByD,CAgC1D;;;AACOW,EAAAA,kBAAkB,GAAS,CAEjC,CAnCyD,CAqC1D;;;AACOC,EAAAA,oBAAoB,GAAS;AAChCC,IAAAA,aAAa,CAAC,KAAKhB,OAAN,CAAb;AACH;;AAxCyD;;AA2C9D,eAAeH,aAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./RandomProduct.css\";\n\ninterface RandomProductState {\n    products: string[];\n    randomProduct: string;\n}\n\nclass RandomProduct extends Component<{}, RandomProductState> {\n\n    private timerId = 0;\n\n    // Constructor - Object has been created\n    public constructor(props: {}) {\n        super(props);\n        this.state = {\n            products: [\"Apple\", \"Banana\", \"Peach\", \"Grapes\", \"Orange\"],\n            randomProduct: \"Apple\"\n        };\n    }\n\n    // componentDidMount - Object is ready for use:\n    public componentDidMount(): void {\n        this.timerId = window.setInterval(() => {\n            const index = Math.floor(Math.random() * this.state.products.length);\n            this.setState({ randomProduct: this.state.products[index] });\n        }, 1000);\n    }\n\n    // render - UI needs to be rendered into the DOM:\n    public render(): JSX.Element {\n        return (\n            <div className=\"RandomProduct Box\">\n                <p>\n                    <span>{this.state.randomProduct}</span>\n                </p>\n            </div>\n        );\n    }\n\n    // componentDidUpdate - Component state or props has been changed\n    public componentDidUpdate(): void {\n\n    }\n\n    // componentWillUnmount - the component is about to be destroyed!\n    public componentWillUnmount(): void {\n        clearInterval(this.timerId);\n    }\n}\n\nexport default RandomProduct;\n"]},"metadata":{},"sourceType":"module"}