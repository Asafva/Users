{"ast":null,"code":"// // Single Reducer: \n// import { createStore } from \"redux\";\n// import { usersReducer } from \"./usersState\";\n// const store = createStore(usersReducer);\nimport { composeWithDevTools } from 'redux-devtools-extension'; // export default store;\n// // Redux three operations using single reducer: \n// // 1. Get State: store.getState().users\n// // 2. Subscribe: store.subscribe(...)\n// // 3. Dispatch: store.dispatch(...)\n// -------------------------------------------------------------------------------------------------\n// Multiple Reducers: \n\nimport { combineReducers, createStore } from \"redux\";\nimport { usersReducer } from \"./UsersState\";\nconst reducers = combineReducers({\n  usersState: usersReducer\n}); // const store = createStore(reducers);\n\nconst store = createStore(reducers, composeWithDevTools());\nexport default store; // Redux three operations using multiple reducer:\n// 1. Get State: store.getState().usersState.users / store.getState().catsState.cats\n// 2. Subscribe: store.subscribe(...)\n// 3. Dispatch: store.dispatch(...)","map":{"version":3,"sources":["C:/Users/USER/Desktop/New folder/Frontend/src/Redux/Store.ts"],"names":["composeWithDevTools","combineReducers","createStore","usersReducer","reducers","usersState","store"],"mappings":"AAAA;AAEA;AACA;AAEA;AACA,SAASA,mBAAT,QAAoC,0BAApC,C,CAGA;AAEA;AACA;AACA;AACA;AAGA;AAGA;;AAEA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAAC;AAAEI,EAAAA,UAAU,EAAEF;AAAd,CAAD,CAAhC,C,CACA;;AAEA,MAAMG,KAAK,GAAGJ,WAAW,CAACE,QAAD,EAAWJ,mBAAmB,EAA9B,CAAzB;AAEA,eAAeM,KAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["// // Single Reducer: \r\n\r\n// import { createStore } from \"redux\";\r\n// import { usersReducer } from \"./usersState\";\r\n\r\n// const store = createStore(usersReducer);\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n// export default store;\r\n\r\n// // Redux three operations using single reducer: \r\n// // 1. Get State: store.getState().users\r\n// // 2. Subscribe: store.subscribe(...)\r\n// // 3. Dispatch: store.dispatch(...)\r\n\r\n\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Multiple Reducers: \r\n\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { usersReducer } from \"./UsersState\";\r\n\r\nconst reducers = combineReducers({ usersState: usersReducer, });\r\n// const store = createStore(reducers);\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n\r\n// Redux three operations using multiple reducer:\r\n// 1. Get State: store.getState().usersState.users / store.getState().catsState.cats\r\n// 2. Subscribe: store.subscribe(...)\r\n// 3. Dispatch: store.dispatch(...)\r\n\r\n"]},"metadata":{},"sourceType":"module"}