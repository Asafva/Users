{"ast":null,"code":"// Products State - המידע ברמת האפליקציה הקשור למוצרים\nexport class ProductsState {\n  constructor() {\n    this.products = [];\n  } // undefined חשוב לאתחל מערכים כך שלא יהיה בו\n\n\n} // Products Action Type: \n\nexport let ProductsActionType; // Products Action:\n\n(function (ProductsActionType) {\n  ProductsActionType[\"ProductsDownloaded\"] = \"ProductsDownloaded\";\n  ProductsActionType[\"ProductAdded\"] = \"ProductAdded\";\n  ProductsActionType[\"ProductUpdated\"] = \"ProductUpdated\";\n  ProductsActionType[\"ProductDeleted\"] = \"ProductDeleted\";\n})(ProductsActionType || (ProductsActionType = {}));\n\n// Products Action Creators: \nexport function productsDownloadedAction(products) {\n  return {\n    type: ProductsActionType.ProductsDownloaded,\n    payload: products\n  };\n}\nexport function productAddedAction(addedProduct) {\n  return {\n    type: ProductsActionType.ProductAdded,\n    payload: addedProduct\n  };\n}\nexport function productUpdatedAction(updatedProduct) {\n  return {\n    type: ProductsActionType.ProductUpdated,\n    payload: updatedProduct\n  };\n}\nexport function productDeletedAction(id) {\n  return {\n    type: ProductsActionType.ProductDeleted,\n    payload: id\n  };\n} // Products Reducer: \n\nexport function productsReducer(currentState = new ProductsState(), action) {\n  const newState = { ...currentState\n  };\n\n  switch (action.type) {\n    case ProductsActionType.ProductsDownloaded:\n      // payload = all products\n      newState.products = action.payload;\n      break;\n\n    case ProductsActionType.ProductAdded:\n      // payload = added product\n      newState.products.push(action.payload);\n      break;\n\n    case ProductsActionType.ProductUpdated:\n      // payload = updated product\n      const indexToUpdate = newState.products.findIndex(p => p.login.username === action.payload.id);\n      newState.products[indexToUpdate] = action.payload;\n      break;\n\n    case ProductsActionType.ProductDeleted:\n      // payload = product id to delete\n      const indexToDelete = newState.products.findIndex(p => p.login.username === action.payload);\n      newState.products.splice(indexToDelete, 1);\n      break;\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/New folder/Frontend/src/Redux/ProductsState.ts"],"names":["ProductsState","products","ProductsActionType","productsDownloadedAction","type","ProductsDownloaded","payload","productAddedAction","addedProduct","ProductAdded","productUpdatedAction","updatedProduct","ProductUpdated","productDeletedAction","id","ProductDeleted","productsReducer","currentState","action","newState","push","indexToUpdate","findIndex","p","login","username","indexToDelete","splice"],"mappings":"AAEA;AACA,OAAO,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACQ,EADR;AAAA,IACY;;;AADZ,C,CAI3B;;AACA,WAAYC,kBAAZ,C,CAOA;;WAPYA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAaZ;AACA,OAAO,SAASC,wBAAT,CAAkCF,QAAlC,EAAyE;AAC5E,SAAO;AAAEG,IAAAA,IAAI,EAAEF,kBAAkB,CAACG,kBAA3B;AAA+CC,IAAAA,OAAO,EAAEL;AAAxD,GAAP;AACH;AACD,OAAO,SAASM,kBAAT,CAA4BC,YAA5B,EAAqE;AACxE,SAAO;AAAEJ,IAAAA,IAAI,EAAEF,kBAAkB,CAACO,YAA3B;AAAyCH,IAAAA,OAAO,EAAEE;AAAlD,GAAP;AACH;AACD,OAAO,SAASE,oBAAT,CAA8BC,cAA9B,EAAyE;AAC5E,SAAO;AAAEP,IAAAA,IAAI,EAAEF,kBAAkB,CAACU,cAA3B;AAA2CN,IAAAA,OAAO,EAAEK;AAApD,GAAP;AACH;AACD,OAAO,SAASE,oBAAT,CAA8BC,EAA9B,EAA0D;AAC7D,SAAO;AAAEV,IAAAA,IAAI,EAAEF,kBAAkB,CAACa,cAA3B;AAA2CT,IAAAA,OAAO,EAAEQ;AAApD,GAAP;AACH,C,CAED;;AACA,OAAO,SAASE,eAAT,CAAyBC,YAA2B,GAAG,IAAIjB,aAAJ,EAAvD,EAA4EkB,MAA5E,EAAmH;AAEtH,QAAMC,QAAQ,GAAG,EAAE,GAAGF;AAAL,GAAjB;;AAEA,UAAQC,MAAM,CAACd,IAAf;AAEI,SAAKF,kBAAkB,CAACG,kBAAxB;AAA4C;AACxCc,MAAAA,QAAQ,CAAClB,QAAT,GAAoBiB,MAAM,CAACZ,OAA3B;AACA;;AAEJ,SAAKJ,kBAAkB,CAACO,YAAxB;AAAsC;AAClCU,MAAAA,QAAQ,CAAClB,QAAT,CAAkBmB,IAAlB,CAAuBF,MAAM,CAACZ,OAA9B;AACA;;AAEJ,SAAKJ,kBAAkB,CAACU,cAAxB;AAAwC;AACpC,YAAMS,aAAa,GAAGF,QAAQ,CAAClB,QAAT,CAAkBqB,SAAlB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,QAAR,KAAqBP,MAAM,CAACZ,OAAP,CAAeQ,EAArE,CAAtB;AACAK,MAAAA,QAAQ,CAAClB,QAAT,CAAkBoB,aAAlB,IAAmCH,MAAM,CAACZ,OAA1C;AACA;;AAEJ,SAAKJ,kBAAkB,CAACa,cAAxB;AAAwC;AACpC,YAAMW,aAAa,GAAGP,QAAQ,CAAClB,QAAT,CAAkBqB,SAAlB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,QAAR,KAAqBP,MAAM,CAACZ,OAA7D,CAAtB;AACAa,MAAAA,QAAQ,CAAClB,QAAT,CAAkB0B,MAAlB,CAAyBD,aAAzB,EAAwC,CAAxC;AACA;AAlBR;;AAqBA,SAAOP,QAAP;AAEH","sourcesContent":["import UserModel from \"../Models/UserModel\";\r\n\r\n// Products State - המידע ברמת האפליקציה הקשור למוצרים\r\nexport class ProductsState {\r\n    public products: UserModel[] = []; // undefined חשוב לאתחל מערכים כך שלא יהיה בו\r\n}\r\n\r\n// Products Action Type: \r\nexport enum ProductsActionType {\r\n    ProductsDownloaded = \"ProductsDownloaded\",\r\n    ProductAdded = \"ProductAdded\",\r\n    ProductUpdated = \"ProductUpdated\",\r\n    ProductDeleted = \"ProductDeleted\"\r\n}\r\n\r\n// Products Action:\r\nexport interface ProductsAction {\r\n    type: ProductsActionType;\r\n    payload?: any; // מטען שילוח\r\n}\r\n\r\n// Products Action Creators: \r\nexport function productsDownloadedAction(products: UserModel[]): ProductsAction {\r\n    return { type: ProductsActionType.ProductsDownloaded, payload: products };\r\n}\r\nexport function productAddedAction(addedProduct: UserModel): ProductsAction {\r\n    return { type: ProductsActionType.ProductAdded, payload: addedProduct };\r\n}\r\nexport function productUpdatedAction(updatedProduct: UserModel): ProductsAction {\r\n    return { type: ProductsActionType.ProductUpdated, payload: updatedProduct };\r\n}\r\nexport function productDeletedAction(id: number): ProductsAction {\r\n    return { type: ProductsActionType.ProductDeleted, payload: id };\r\n}\r\n\r\n// Products Reducer: \r\nexport function productsReducer(currentState: ProductsState = new ProductsState(), action: ProductsAction): ProductsState {\r\n\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n\r\n        case ProductsActionType.ProductsDownloaded: // payload = all products\r\n            newState.products = action.payload;\r\n            break;\r\n\r\n        case ProductsActionType.ProductAdded: // payload = added product\r\n            newState.products.push(action.payload);\r\n            break;\r\n\r\n        case ProductsActionType.ProductUpdated: // payload = updated product\r\n            const indexToUpdate = newState.products.findIndex(p => p.login.username === action.payload.id);\r\n            newState.products[indexToUpdate] = action.payload;\r\n            break;\r\n\r\n        case ProductsActionType.ProductDeleted: // payload = product id to delete\r\n            const indexToDelete = newState.products.findIndex(p => p.login.username === action.payload);\r\n            newState.products.splice(indexToDelete, 1);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}