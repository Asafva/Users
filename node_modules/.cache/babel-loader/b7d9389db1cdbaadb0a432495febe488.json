{"ast":null,"code":"export class CatModel {\n  constructor() {\n    this.id = void 0;\n    this.name = void 0;\n    this.age = void 0;\n  }\n\n}\nexport class CatsState {\n  constructor() {\n    this.cats = [];\n  }\n\n}\nexport let CatsActionType;\n\n(function (CatsActionType) {\n  CatsActionType[\"CatsDownloaded\"] = \"CatsDownloaded\";\n  CatsActionType[\"CatAdded\"] = \"CatAdded\";\n  CatsActionType[\"CatUpdated\"] = \"CatUpdated\";\n  CatsActionType[\"CatDeleted\"] = \"CatDeleted\";\n})(CatsActionType || (CatsActionType = {}));\n\nexport function CatsDownloadedAction(Cats) {\n  return {\n    type: CatsActionType.CatsDownloaded,\n    payload: Cats\n  };\n}\n_c = CatsDownloadedAction;\nexport function CatAddedAction(addedCat) {\n  return {\n    type: CatsActionType.CatAdded,\n    payload: addedCat\n  };\n}\n_c2 = CatAddedAction;\nexport function CatUpdatedAction(updatedCat) {\n  return {\n    type: CatsActionType.CatUpdated,\n    payload: updatedCat\n  };\n}\n_c3 = CatUpdatedAction;\nexport function CatDeletedAction(id) {\n  return {\n    type: CatsActionType.CatDeleted,\n    payload: id\n  };\n}\n_c4 = CatDeletedAction;\nexport function catsReducer(currentState = new CatsState(), action) {\n  const newState = { ...currentState\n  };\n\n  switch (action.type) {\n    case CatsActionType.CatsDownloaded:\n      newState.cats = action.payload;\n      break;\n\n    case CatsActionType.CatAdded:\n      newState.cats.push(action.payload);\n      break;\n\n    case CatsActionType.CatUpdated:\n      const indexToUpdate = newState.cats.findIndex(c => c.id === action.payload.id);\n      newState.cats[indexToUpdate] = action.payload;\n      break;\n\n    case CatsActionType.CatDeleted:\n      const indexToDelete = newState.cats.findIndex(c => c.id === action.payload);\n      newState.cats.splice(indexToDelete, 1);\n      break;\n  }\n\n  return newState;\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CatsDownloadedAction\");\n$RefreshReg$(_c2, \"CatAddedAction\");\n$RefreshReg$(_c3, \"CatUpdatedAction\");\n$RefreshReg$(_c4, \"CatDeletedAction\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/New folder/Frontend/src/Redux/CatsState.ts"],"names":["CatModel","id","name","age","CatsState","cats","CatsActionType","CatsDownloadedAction","Cats","type","CatsDownloaded","payload","CatAddedAction","addedCat","CatAdded","CatUpdatedAction","updatedCat","CatUpdated","CatDeletedAction","CatDeleted","catsReducer","currentState","action","newState","push","indexToUpdate","findIndex","c","indexToDelete","splice"],"mappings":"AAAA,OAAO,MAAMA,QAAN,CAAe;AAAA;AAAA,SACXC,EADW;AAAA,SAEXC,IAFW;AAAA,SAGXC,GAHW;AAAA;;AAAA;AAMtB,OAAO,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACZC,IADY,GACO,EADP;AAAA;;AAAA;AAIvB,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAYZ,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAA4D;AAC/D,SAAO;AAAEC,IAAAA,IAAI,EAAEH,cAAc,CAACI,cAAvB;AAAuCC,IAAAA,OAAO,EAAEH;AAAhD,GAAP;AACH;KAFeD,oB;AAGhB,OAAO,SAASK,cAAT,CAAwBC,QAAxB,EAAwD;AAC3D,SAAO;AAAEJ,IAAAA,IAAI,EAAEH,cAAc,CAACQ,QAAvB;AAAiCH,IAAAA,OAAO,EAAEE;AAA1C,GAAP;AACH;MAFeD,c;AAGhB,OAAO,SAASG,gBAAT,CAA0BC,UAA1B,EAA4D;AAC/D,SAAO;AAAEP,IAAAA,IAAI,EAAEH,cAAc,CAACW,UAAvB;AAAmCN,IAAAA,OAAO,EAAEK;AAA5C,GAAP;AACH;MAFeD,gB;AAGhB,OAAO,SAASG,gBAAT,CAA0BjB,EAA1B,EAAkD;AACrD,SAAO;AAAEQ,IAAAA,IAAI,EAAEH,cAAc,CAACa,UAAvB;AAAmCR,IAAAA,OAAO,EAAEV;AAA5C,GAAP;AACH;MAFeiB,gB;AAIhB,OAAO,SAASE,WAAT,CAAqBC,YAAuB,GAAG,IAAIjB,SAAJ,EAA/C,EAAgEkB,MAAhE,EAA+F;AAElG,QAAMC,QAAQ,GAAG,EAAE,GAAGF;AAAL,GAAjB;;AAEA,UAAQC,MAAM,CAACb,IAAf;AAEI,SAAKH,cAAc,CAACI,cAApB;AACIa,MAAAA,QAAQ,CAAClB,IAAT,GAAgBiB,MAAM,CAACX,OAAvB;AACA;;AAEJ,SAAKL,cAAc,CAACQ,QAApB;AACIS,MAAAA,QAAQ,CAAClB,IAAT,CAAcmB,IAAd,CAAmBF,MAAM,CAACX,OAA1B;AACA;;AAEJ,SAAKL,cAAc,CAACW,UAApB;AACI,YAAMQ,aAAa,GAAGF,QAAQ,CAAClB,IAAT,CAAcqB,SAAd,CAAwBC,CAAC,IAAIA,CAAC,CAAC1B,EAAF,KAASqB,MAAM,CAACX,OAAP,CAAeV,EAArD,CAAtB;AACAsB,MAAAA,QAAQ,CAAClB,IAAT,CAAcoB,aAAd,IAA+BH,MAAM,CAACX,OAAtC;AACA;;AAEJ,SAAKL,cAAc,CAACa,UAApB;AACI,YAAMS,aAAa,GAAGL,QAAQ,CAAClB,IAAT,CAAcqB,SAAd,CAAwBC,CAAC,IAAIA,CAAC,CAAC1B,EAAF,KAASqB,MAAM,CAACX,OAA7C,CAAtB;AACAY,MAAAA,QAAQ,CAAClB,IAAT,CAAcwB,MAAd,CAAqBD,aAArB,EAAoC,CAApC;AACA;AAlBR;;AAqBA,SAAOL,QAAP;AACH","sourcesContent":["export class CatModel {\r\n    public id: number;\r\n    public name: string;\r\n    public age: number;\r\n}\r\n\r\nexport class CatsState {\r\n    public cats: CatModel[] = [];\r\n}\r\n\r\nexport enum CatsActionType {\r\n    CatsDownloaded = \"CatsDownloaded\",\r\n    CatAdded = \"CatAdded\",\r\n    CatUpdated = \"CatUpdated\",\r\n    CatDeleted = \"CatDeleted\"\r\n}\r\n\r\nexport interface CatsAction {\r\n    type: CatsActionType;\r\n    payload?: any;\r\n}\r\n\r\nexport function CatsDownloadedAction(Cats: CatModel[]): CatsAction {\r\n    return { type: CatsActionType.CatsDownloaded, payload: Cats };\r\n}\r\nexport function CatAddedAction(addedCat: CatModel): CatsAction {\r\n    return { type: CatsActionType.CatAdded, payload: addedCat };\r\n}\r\nexport function CatUpdatedAction(updatedCat: CatModel): CatsAction {\r\n    return { type: CatsActionType.CatUpdated, payload: updatedCat };\r\n}\r\nexport function CatDeletedAction(id: number): CatsAction {\r\n    return { type: CatsActionType.CatDeleted, payload: id };\r\n}\r\n\r\nexport function catsReducer(currentState: CatsState = new CatsState(), action: CatsAction): CatsState {\r\n\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n\r\n        case CatsActionType.CatsDownloaded:\r\n            newState.cats = action.payload;\r\n            break;\r\n\r\n        case CatsActionType.CatAdded:\r\n            newState.cats.push(action.payload);\r\n            break;\r\n\r\n        case CatsActionType.CatUpdated:\r\n            const indexToUpdate = newState.cats.findIndex(c => c.id === action.payload.id);\r\n            newState.cats[indexToUpdate] = action.payload;\r\n            break;\r\n\r\n        case CatsActionType.CatDeleted:\r\n            const indexToDelete = newState.cats.findIndex(c => c.id === action.payload);\r\n            newState.cats.splice(indexToDelete, 1);\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}"]},"metadata":{},"sourceType":"module"}